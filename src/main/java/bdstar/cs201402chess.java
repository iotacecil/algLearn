package bdstar;

/*
小度和小良最近又迷上了下棋。棋盘一共有N行M列，我们可以把左上角的格子定为(1,1)，右下角的格子定为(N,M)。
如果“王”当前在(x,y)点，
小度在下一步可以移动到(x+1, y), (x-1, y), (x, y+1), (x, y-1), (x+2, y), (x-2, y), (x, y+2), (x, y-2) 这八个点中的任意一个。

如果一开始“王”在(x0,y0)点，小良对“王”连续移动恰好K步，一共可以有多少种不同的移动方案？
两种方案相同，当且仅当它们的K次移动全部都是一样的。也就是说，先向左再向右移动，和先向右再向左移动被认为是不同的方案。

Input
输入包括多组数据。输入数据的第一行是一个整数T(T≤10)，表示测试数据的组数。
每组测试数据只包括一行，为五个整数N,M,K,x0,y0。(1≤N,M,K≤1000,1≤x0≤N,1≤y0≤M)



Output
对于第k组数据，第一行输出Case #k:，第二行输出所求的方案数。由于答案可能非常大，你只需要输出结果对9999991取模之后的值即可。



Sample Input
2 2 2 1 1 1 2 2 2 1 1



Sample Output
Case #1: 2 Case #2: 4

 */
public class cs201402chess {

    public static void main(String[] args) {

    }
}
