package leetcode;
/*
输入: "1*"
输出: 9 + 9 = 18（翻译者标注：这里1*可以分解为1,* 或者当做1*来处理，所以结果是9+9=18）
1* -> 10 11 12... 19  -> 1,0 1,1...

one = {'1': 1, '2': 1, '3': 1, '4': 1, '5': 1, '6': 1, '7': 1, '8': 1, '9': 1, '*': 9}

two = {'10': 1, '11': 1, '12': 1, '13': 1, '14': 1, '15': 1, '16': 1, '17': 1, '18': 1, '19': 1, '20': 1, '21': 1,
        '22': 1, '23': 1, '24': 1, '25': 1, '26': 1, '*0': 2, '*1': 2, '*2': 2, '*3': 2, '*4': 2, '*5': 2, '*6': 2,
        '*7': 1, '*8': 1, '*9': 1, '1*': 9, '2*': 6, '**': 15}
 */
public class lc639 {

    public int numDecodings(String s) {
        //
        int e0 = 1,e1 = 0,e2=0,f0,f1,f2;
        int M =1_000_000_007;
//        System.out.println(1_000_000_007 - M);
        for(char c : s.toCharArray()){
            if(c == '*'){
                f0 = 9*e0 + 9*e1 +6*e2;
                f1 = e0;
                f2 = e0;
            }else{
                f0 = ((c > '0')?1:0 )* e0 + e1 + ((c <= '6')?1:0) * e2;
                f1 = ((c == '1')?1:0 ) * e0;
                f2 = ((c == '2')?1:0 ) * e0;
            }
            e0 = f0 % M;
            e1 = f1;
            e2 = f2;
        }
        return (int)e0;

    }

    public static void main(String[] args) {
        lc639 sl = new lc639();
        System.out.println(sl.numDecodings("*"));
    }
}
