package niuke.pdd;

/*
4、一个合法的圆括号表达式满足以下条件：
①.””空字符串被认为是合法的
②.如果字符串”X”与”Y”是合法的，则”XY”也被认为是合法的
③.如果字符串”X”是合法的，则”(X)”也是合法的
例子：””，”()”，”()()”，”(())”这些都是合法的
现给出两个不保证合法的由圆括号组成的字符串，你需要交错这两个圆括号序列（在组成的新字符串中，每个初始字符串都保持原来的顺序）得到一个新的合法圆括号表达式（不同的交错方式可能会得到相同的表达式，这种情况分开计数），求共有多少结果合法的交错方式（无法得到合法的圆括号表达式则输出为0），输出结果模10^9+7的值（^符号是乘方的意思）

输入描述：
输入包含两行，分别是两个只有”(“和”)”组成的字符串，长度小于2500

输出描述：
输出为一个数字，表示合法的交错方式数量模上10^9+7

示例：
输入：

(()
())
输出：

19
 */
public class 括号序列2019 {

//    private int[] get_prefix_sum(String str){
//        int[] persum = new int[str.length()];
//    }
//
//    public static void main(String[] args) {
//        Scanner sc =new Scanner(System.in);
//        String a = sc.next();
//        String b = sc.next();
//    }
}
